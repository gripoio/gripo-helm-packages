name: Helm Package and Index Charts

on:
  push:
    paths:
      - 'charts/**'  # Trigger only when files under charts/ are modified
    branches:
      - gh-pages

jobs:
  helm-package-and-index:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Install Helm and yq
      - name: Install Helm and yq
        run: |
          # Install Helm
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

          # Install yq (v4.32.2, stable version)
          curl -sL https://github.com/mikefarah/yq/releases/download/v4.32.2/yq_linux_amd64 -o /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
          yq --version  # Verify yq installation

      # 3. Run the custom packaging script
      - name: Run Helm Package Script
        run: |
          ROOT_DIR="."
          OUTPUT_DIR="./charts/packages"
          
          echo "Testing each package...."
          find "$ROOT_DIR" -name "Chart.yaml" -print0 | while IFS= read -r -d '' chart; do
            chart_dir=$(dirname "$chart")
            echo "Processing chart directory: $chart_dir"
            # Try block (Bash equivalent)
        
            result=$(helm template "$chart_dir" 2>&1)  # Capture stderr and stdout
            if [ $? -ne 0 ]; then
            # If the command failed, print the error message and exit the script
              echo "Error executing helm template for chart $chart_dir:"
              echo "$result"  # Output the error message
              test_failed=true
              exit 1  # Exit the script with a non-zero status to indicate failure
            else
           # If the command was successful, print the result
              echo "Helm template output for $chart_dir:"
              echo "$result"
           fi
          done

          if ["$test_failed"=true]; then
             echo "Exiting due to failure in helm template test."
             exit 1
          fi

          # Create the output directory if it doesn't exist
          mkdir -p "$OUTPUT_DIR"

          echo "Checking for updated Helm charts..."

          # Find all Chart.yaml files and package only updated charts
          find "$ROOT_DIR" -name "Chart.yaml" -print0 | while IFS= read -r -d '' chart; do
              chart_dir=$(dirname "$chart")
              chart_name=$(yq eval '.name' "$chart")  # Extract chart name
              chart_version=$(yq eval '.version' "$chart")  # Extract chart version
              tgz_file="$OUTPUT_DIR/${chart_name}-${chart_version}.tgz"

              # Check if the chart needs repackaging
              if [ ! -f "$tgz_file" ] || [ "$chart" -nt "$tgz_file" ]; then
                  echo "Packaging updated chart: $chart_name"
                  helm package "$chart_dir" --destination "$OUTPUT_DIR"
              fi
          done

          # Regenerate the Helm index.yaml
          echo "Generating Helm repository index..."
          helm repo index "./charts/"

          echo "Helm repository index updated successfully."

      # 4. Commit the packaged charts and index.yaml
      - name: Commit packaged charts and index.yaml
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Using the secret for token authentication
        run: |
          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "github-actions@github.com"

          # Set up authentication for GitHub using the personal access token
          git remote set-url origin https://github.com/${{ github.repository }}.git
          git config --global credential.helper store
          echo "https://x-access-token:${GH_TOKEN}@github.com" > ~/.git-credentials

          # Add the packaged charts and index.yaml
          git add charts/packages/*
          git add charts/index.yaml

          # Commit the changes
          git commit -m "Add packaged Helm charts and update index.yaml"

          # Push the changes back to the repository
          git push origin gh-pages
